#!/usr/bin/perl

# Note: this program is part of PerlQt and makes use of its internal functions.
#       You should not rely on those in your own programs.

use Getopt::Std;
use strict 'vars';

our (%o, @x, $h);
getopts('r:hvi', \%o);

package Qt::_internal;
use Qt;

exists $o{'v'} and do{ print "PerlQt-$Qt::VERSION using Qt-".&Qt::version."\n" and exit 0 };
exists $o{'h'} and do{ print $h and exit 0 };
(my $c = $ARGV[0]) =~ s/^Q(?=[A-Z])/Qt::/;
my $i = $c ? find_pclassid( $c ) : 1;
my $r = exists $o{'r'} ? (exists $o{'i'} ? qr|$o{'r'}|i : qr|$o{'r'}|) : 0;
my $d = "";

while ($i)
{
   $a=findAllMethods($i);
   last unless keys %$a;
   @x=map {@{ $$a{$_} }} sort keys %$a;
   $d = dumpCandidates(\@x);
   if($r)
   {
       map { print "$_\n" if $_=~$r } split("\n", $d);
   }
   else
   {
       print $d
   }
   $c and last;
   $i++
}

BEGIN {
    $h = "pqtapi - a PerlQt introspection tool\t(c) Germain Garand 2003 <germain\@ebooksfrance.org>\n\n".
         "usage: pqtapi [-r <re>] [<class>]\n\n".
         "options:\n". 
         "\t-r <re> : find all functions matching regular expression/keyword <re>\n".
         "\t-i : together with -r, performs a case insensitive search\n".
         "\t-v : print PerlQt and Qt versions\n".
         "\t-h : print this help message\n";
}
