
### do not edit Makefile.PL, edit Makefile.PL.in

use Config;

$x{'LIBPNG'}  =   '@LIBPNG@';
$x{'LIBJPEG'} =   '@LIBJPEG@';
$x{'LIBSM'}   =   '@LIBSM@';
$x{'LIBSOCKET'} = '@LIBSOCKET@';
$x{'LIB_X11'} =   '@LIB_X11@';
$x{'LIB_X11'} =~ s/\$\((.*?)\)/$x{$1}/g;

my $objects='Qt$(OBJ_EXT) handlers$(OBJ_EXT)';
my $qtlib ='@LIB_QT@';
$qtlib =~s/\$\((.*?)\)/$x{$1}/g;
my $rpath='@USE_RPATH@';

my $cxx = '@CXX@';
my $sh= '@SHELL@';
my $topdir= '@top_builddir@';
my $libtool_rpath = `${topdir}/libtool --mode=link $cxx -o foo.so foo.o -R @kde_libraries@ 2>/dev/null`;
$libtool_rpath = "" unless $libtool_rpath =~ s/.*foo.so foo.o//s;
chomp $libtool_rpath;
$rpath = $rpath eq "yes" ? ($libtool_rpath ? $libtool_rpath : "-Wl,--rpath -Wl,@kde_libraries@"):"";

my @scripts = ("bin/pqtsh", "bin/pqtapi");

###

use ExtUtils::MakeMaker;
use Cwd;

my $pwd = getcwd;
my $localsmoke = $pwd."/../smoke/qt/.libs";


# See lib/ExtUtils/MakeMaker.pm for details of how to influence
# the contents of the Makefile that is written.

WriteMakefile(
    'NAME'		=> 'Qt',
    'VERSION_FROM'	=> 'Qt.pm', # finds $VERSION
    'PREREQ_PM'		=> {}, # e.g., Module::Name => 1.1,
    'INC'		=> "@all_includes@ -I. -I../smoke",
    'LIBS'		=> ["@all_libraries@ -L$localsmoke @LIBCRYPT@ $qtlib -lsmokeqt"],
#   'XS'		=> {'Qt.xs' => 'Qt.cpp'}, # does not work ... still expects Qt.c 
    'XSOPT'		=> "-C++",
    'OBJECT'		=> "$objects",  # Object files
    'CC'		=> '@CXX@',
    'INST_BIN'          => './bin',
    'DEFINE'            => '@CXXFLAGS@',
    'H'                 => ["marshall.h", "perlqt.h", "smokeperl.h"],
    'ABSTRACT'		=> "An OO interface to Trolltech's Qt toolkit",
    'dynamic_lib'       => {'OTHERLDFLAGS' => $rpath},
    ($] >= 5.005 ?    ## Add these new keywords supported since 5.005
      (
       AUTHOR     => 'Ashley Winters <qaqortog@nwlink.com>') : ()),
);

sub MY::clean {
                   package MY;
                   my $i = shift->SUPER::clean(@_);
                   my $pl = '$(PERL) Makefile.PL';
                   $i =~ s/\n+$/\n\t$pl$&/s;
                   $i;
}

sub MY::const_loadlibs {
                   package MY;
                   my $i = shift->SUPER::const_loadlibs(@_);
                   # hacks for linking against a non-yet-installed smoke
                   $i =~ s/((?:EXTRALIBS|LDLOADLIBS).*?)\n/$1 -L$localsmoke -lsmokeqt\n/gs unless $i =~/-lsmokeqt/;
                   $i =~ s#(LD_RUN_PATH.*?)(${localsmoke})?\n#"$1".($2?"":":")."@kde_libraries@\n"#se;
                   $i;
}

sub MY::dist {
		  package MY;
                   my $i = shift->SUPER::dist(@_);
                   $i =~ s#(DISTVNAME =).*?\n#$1 \$(distdir)\n#s;
                   $i;
}

for my $s( @scripts )
{
    rename( $s, $s.".in");
    open( IN, "$s.in" );
    open( OUT, ">$s" );
    <IN>;
    print OUT ($Config{'startperl'} ?  $Config{'startperl'}."\n" : $_ );
    while( <IN> )
    {  print OUT  }
    close IN;
    close OUT;
    unlink $s . ".in";
    chmod 0755, $s;
}
