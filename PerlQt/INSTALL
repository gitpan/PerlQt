PerlQt is distributed under the GPL. Development is coordinated on the
kde-perl@mail.kde.org mailing-list. To subscribe, visit
http://mail.kde.org/mailman/listinfo/kde-perl or send a subscribe message
to kde-perl-request@mail.kde.org. Please send patches and bug reports
to the mailing-list.

This file contains instructions for downloading and building the SmokeQt
library and PerlQt. PerlQt is not a direct Perl interface to the Qt
library, but is rather an interface to the SmokeQt library generated by
Kalyptus.

The programs+version I use, but not necessarily required:
Linux               (oddly enough, most of the developers use Mandrake)
Perl-5.6.0 or above (tested up to 5.8.0-RC1)
Qt-3.0.1 or above   (untested with 3.0.0, should work though)
automake-1.5        (KDE requires recent automake)
autoconf-2.53       (KDE requires recent autoconf)

Make sure your $QTDIR environment-variable is set.

I'm sorry for all the requirements, but you *are* getting this from 
CVS. Release versions will be much easier and more independant.

First, you need to download the development environment for smokeqt.
Please use compression for cvs downloads ('cvs -z4' in .cvsrc).

$ export CVSROOT=:pserver:anonymous@anoncvs.kde.org:/home/kde
$ cvs login                   # no password
$ cvs co -l kdebindings       # downloads configure/makefile stubs
$ cvs co kdebindings/kalyptus # for generating smoke files from scratch
$ cvs co kdebindings/smoke    # pre-generated smoke library
$ cd kdebindings              # kdebindings/
$ cvs co admin                # get kde build tools

At this point, you now have the full smokeqt environment. The
pre-generated smoke library is based off KDE's copy of Qt-3.0.4. I have
Qt-3.0.1, so I have to re-generate the files to match my installed 
version of Qt. Here's how to do it.

$ cd smoke/qt                 # kdebindings/smoke/qt/
$ perl ./qtguess.pl           # simple script to find disabled Qt features
$ perl ./generate.pl          # calls kalyptus which generates code

Now you have the SmokeQt source-code generated for your personal Qt
configuration. Here's how to compile.

$ cd ../..                    # kdebindings/
$ make -f Makefile.cvs        # create ./configure, will croak but succeed
$ ./configure                 # use --prefix or whatever options you want
$ cd smoke                    # kdebindings/smoke/
$ make                        # this should succeed
$ make install                # will install to --prefix from configure

Okay, you now have libsmokeqt installed on your system. You can now
compile PerlQt. First, get the latest version of PerlQt-3.

$ export CVSROOT=:pserver:anonymous@cvs.perlqt.sf.net:/cvsroot/perlqt
$ cvs login                   # no password
$ cvs co PerlQt-3
$ cd PerlQt-3                 # PerlQt-3/

If you installed libsmokeqt in a non-standard library path, you will
need to edit Makefile.PL and add -L/your/lib/path to the LIBS
parameter. If any of the other options in Makefile.PL need changing for
your system, you will need to change it now.

$ perl Makefile.PL
$ make

Now PerlQt is built on your system. To test it out:

$ cd tutorials                # PerlQt-3/tutorials/
$ perl runall.pl

All 14 tutorials should run in order. As you close one program out by
clicking Quit or the window close button, the next should start. If all 14
tutorials run without error and work like the C++ version, PerlQt is built
correctly and you can make install if you wish. If an error occurs which
you can't fix, contact the kde-perl mailing list and make a bug report.

Good luck,
Ashley Winters <qaqortog@nwlink.com>
