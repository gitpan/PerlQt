#include <qpaintd.h>

class QPaintDevice {
^   QPaintDevice(uint);
    virtual ~QPaintDevice();
    void bitBlt(const QPoint &, const QPaintDevice *, const QRect & = QRect(0,0,-1,-1), RasterOp {enum} = CopyROP, bool = FALSE) : bitBlt($this, $1, $2, $3, $4, $5);
    void bitBlt(int, int, const QPaintDevice *, int = 0, int = 0, int = -1, int = -1, RasterOp {enum} = CopyROP, bool = FALSE) : bitBlt($this, $1, $2, $3, $4, $5, $6, $7, $8, $9);
    int devType() const;
    HANDLE {uint} handle() const;
    bool isExtDev() const;
    bool paintingActive() const;
    static Display *{uint} x__Display();
    static int x11Cells();
    static HANDLE {uint} x11Colormap();
    static bool x11DefaultColormap();
    static bool x11DefaultVisual();
    static int x11Depth();
    Display *{uint} x11Display() const;
    static int x11Screen();
    static void * {uint} x11Visual();
} PaintDevice;

%Align = (
    Left => AlignLeft,
    Right => AlignRight,
    HCenter => AlignHCenter,
    Top => AlignTop,
    Bottom => AlignBottom,
    VCenter => AlignVCenter,
    Center => AlignCenter,

    AlignLeft => AlignLeft,
    AlignRight => AlignRight,
    AlignHCenter => AlignHCenter,
    AlignTop => AlignTop,
    AlignBottom => AlignBottom,
    AlignVCenter => AlignVCenter,
    AlignCenter => AlignCenter
);

%Paint = (
    None => DontPrint,
    Dont => DontPrint,
    SingleLine => SingleLine,
    DontClip => DontClip,
    ExpandTabs => ExpandTabs,
    ShowPrefix => ShowPrefix,
    WordBreak => WordBreak,
    GrayText => GrayText
);
